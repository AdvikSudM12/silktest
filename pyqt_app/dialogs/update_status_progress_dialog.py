"""
–î–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ–ª–∏–∑–æ–≤
"""

from PyQt6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, 
    QProgressBar, QTextEdit, QPushButton, QFrame
)
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QFont, QIcon
from loguru import logger as debug_logger


class UpdateStatusProgressDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ–ª–∏–∑–æ–≤"""
    
    # –°–∏–≥–Ω–∞–ª –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–º–µ–Ω—ã
    cancel_requested = pyqtSignal()
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setup_ui()
        self.setup_styles()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ–ª–∏–∑–æ–≤")
        self.setModal(True)
        self.setFixedSize(600, 500)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        layout = QVBoxLayout(self)
        layout.setSpacing(15)
        layout.setContentsMargins(20, 20, 20, 20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = QLabel("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ–ª–∏–∑–æ–≤")
        self.title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title_font = QFont()
        title_font.setPointSize(14)
        title_font.setBold(True)
        self.title_label.setFont(title_font)
        layout.addWidget(self.title_label)
        
        # –¢–µ–∫—É—â–∞—è —Å—Ç–∞–¥–∏—è
        self.stage_label = QLabel("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
        self.stage_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        stage_font = QFont()
        stage_font.setPointSize(10)
        self.stage_label.setFont(stage_font)
        layout.addWidget(self.stage_label)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setMinimum(0)
        self.progress_bar.setMaximum(100)
        self.progress_bar.setValue(0)
        self.progress_bar.setTextVisible(True)
        layout.addWidget(self.progress_bar)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        separator = QFrame()
        separator.setFrameShape(QFrame.Shape.HLine)
        separator.setFrameShadow(QFrame.Shadow.Sunken)
        layout.addWidget(separator)
        
        # –õ–æ–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        log_label = QLabel("üìã –î–µ—Ç–∞–ª—å–Ω—ã–π –ª–æ–≥:")
        log_font = QFont()
        log_font.setPointSize(10)
        log_font.setBold(True)
        log_label.setFont(log_font)
        layout.addWidget(log_label)
        
        self.log_text = QTextEdit()
        self.log_text.setReadOnly(True)
        self.log_text.setMaximumHeight(250)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞ –¥–ª—è –ª–æ–≥–∞
        log_font = QFont("Consolas", 9)
        if not log_font.exactMatch():
            log_font = QFont("Courier New", 9)
        self.log_text.setFont(log_font)
        
        layout.addWidget(self.log_text)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        
        self.cancel_button = QPushButton("üõë –û—Ç–º–µ–Ω–∏—Ç—å")
        self.cancel_button.clicked.connect(self.on_cancel_clicked)
        buttons_layout.addWidget(self.cancel_button)
        
        buttons_layout.addStretch()
        
        self.close_button = QPushButton("‚úÖ –ó–∞–∫—Ä—ã—Ç—å")
        self.close_button.clicked.connect(self.accept)
        self.close_button.setEnabled(False)  # –í–∫–ª—é—á–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        buttons_layout.addWidget(self.close_button)
        
        layout.addLayout(buttons_layout)
        
    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QDialog {
                background-color: #f5f5f5;
            }
            
            QLabel {
                color: #333;
            }
            
            QProgressBar {
                border: 2px solid #ddd;
                border-radius: 8px;
                text-align: center;
                font-weight: bold;
                height: 25px;
            }
            
            QProgressBar::chunk {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #FF9800, stop:1 #F57C00);
                border-radius: 6px;
            }
            
            QTextEdit {
                border: 1px solid #ddd;
                border-radius: 8px;
                background-color: #fff;
                padding: 8px;
            }
            
            QPushButton {
                background-color: #2196F3;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 6px;
                font-weight: bold;
                min-width: 100px;
            }
            
            QPushButton:hover {
                background-color: #1976D2;
            }
            
            QPushButton:pressed {
                background-color: #0D47A1;
            }
            
            QPushButton:disabled {
                background-color: #ccc;
                color: #666;
            }
            
            QPushButton#cancel_button {
                background-color: #f44336;
            }
            
            QPushButton#cancel_button:hover {
                background-color: #d32f2f;
            }
        """)
        
        self.cancel_button.setObjectName("cancel_button")
        
    def update_progress(self, message: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ª–æ–≥"""
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
        self.log_text.append(message)
        
        # –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        scrollbar = self.log_text.verticalScrollBar()
        scrollbar.setValue(scrollbar.maximum())
        
        debug_logger.info(f"üìä Progress: {message}")
        
    def update_progress_percent(self, percent: int):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        self.progress_bar.setValue(percent)
        debug_logger.info(f"üìà Progress: {percent}%")
        
    def update_stage(self, stage: str):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞–¥–∏—é"""
        stage_messages = {
            "init": "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...",
            "api_check": "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API...",
            "api_test": "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...",
            "fetching": "üì• –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–ª–∏–∑–æ–≤...",
            "backup": "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...",
            "updating": "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤...",
            "completed": "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!",
            "report": "üìä –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...",
            "error": "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
            "cancelled": "üõë –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        }
        
        message = stage_messages.get(stage, f"üîÑ {stage}")
        self.stage_label.setText(message)
        debug_logger.info(f"üé≠ Stage: {stage} -> {message}")
        
    def on_cancel_clicked(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã"""
        debug_logger.warning("üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –æ—Ç–º–µ–Ω—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤")
        self.cancel_requested.emit()
        self.cancel_button.setEnabled(False)
        self.cancel_button.setText("‚è≥ –û—Ç–º–µ–Ω–∞...")
        
    def on_finished(self, success: bool, message: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        debug_logger.info(f"üèÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: success={success}")
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –∏ –≤–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
        self.cancel_button.setEnabled(False)
        self.close_button.setEnabled(True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if success:
            self.title_label.setText("‚úÖ –°—Ç–∞—Ç—É—Å—ã —Ä–µ–ª–∏–∑–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
            self.title_label.setStyleSheet("color: #4CAF50; font-weight: bold;")
            self.stage_label.setText("üéâ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            self.progress_bar.setValue(100)
        else:
            self.title_label.setText("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤")
            self.title_label.setStyleSheet("color: #f44336; font-weight: bold;")
            self.stage_label.setText("üí• –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π")
            
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
        self.update_progress(f"üèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: {message}")
        
    def on_error(self, error_message: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏"""
        debug_logger.error(f"üí• –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤: {error_message}")
        self.update_progress(f"üí• –û–®–ò–ë–ö–ê: {error_message}")
        self.on_finished(False, error_message)
        
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –µ—â–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if self.cancel_button.isEnabled():
            from PyQt6.QtWidgets import QMessageBox
            reply = QMessageBox.question(
                self,
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è",
                "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –µ—â–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –∏ –æ—Ç–º–µ–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é?",
                QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
                QMessageBox.StandardButton.No
            )
            
            if reply == QMessageBox.StandardButton.Yes:
                self.cancel_requested.emit()
                event.accept()
            else:
                event.ignore()
        else:
            event.accept() 