name: üß™ Test Build

on:
  pull_request:
    branches: [ main, macos-build-test ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

jobs:
  test-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üîç Check Python dependencies
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        python3 -m pip install --upgrade pip
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if [ -f "requirements.txt" ]; then
          echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
          cat requirements.txt
          pip install --dry-run -r requirements.txt
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PyQt –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if [ -f "pyqt_app/requirements.txt" ]; then
          echo "üìã PyQt –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
          cat pyqt_app/requirements.txt
          pip install --dry-run -r pyqt_app/requirements.txt
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if [ -f "scripts/requirements.txt" ]; then
          echo "üìã –°–∫—Ä–∏–ø—Ç—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
          cat scripts/requirements.txt
          pip install --dry-run -r scripts/requirements.txt
        fi
        
    - name: üîç Check Node.js dependencies
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm ci --dry-run
        
        echo "üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:"
        npm list --depth=0
        
    - name: üî® Test TypeScript compilation
      run: |
        if [ -f "tsconfig.json" ]; then
          echo "üî® –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é TypeScript..."
          npx tsc --noEmit
          echo "‚úÖ TypeScript –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤"
        else
          echo "‚ö†Ô∏è tsconfig.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        
    - name: üîç Check PyInstaller spec
      run: |
        if [ -f "macos_build/gosilk_staff.spec" ]; then
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PyInstaller —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
          python3 -c "
          import ast
          with open('macos_build/gosilk_staff.spec', 'r') as f:
              content = f.read()
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python
          try:
              ast.parse(content)
              print('‚úÖ PyInstaller spec —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω')
          except SyntaxError as e:
              print(f'‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ spec —Ñ–∞–π–ª–µ: {e}')
              exit(1)
          "
        else
          echo "‚ùå gosilk_staff.spec –Ω–µ –Ω–∞–π–¥–µ–Ω"
          exit 1
        fi
        
  test-structure:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üîç Check project structure
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        required_files=(
          "run_app.py"
          "requirements.txt"
          "package.json"
          "tsconfig.json"
          "macos_build/gosilk_staff.spec"
          "macos_build/build_macos.sh"
          "pyqt_app/main.py"
        )
        
        missing_files=()
        
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file"
          else
            echo "‚ùå $file - –û–¢–°–£–¢–°–¢–í–£–ï–¢"
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -gt 0 ]; then
          echo ""
          echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        fi
        
        echo ""
        echo "‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
        
    - name: üîç Check Python imports
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∏–º–ø–æ—Ä—Ç–æ–≤..."
        python3 -c "
        import sys
        sys.path.append('.')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        try:
            import run_app
            print('‚úÖ run_app.py –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
        except ImportError as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ run_app: {e}')
        
        try:
            from pyqt_app import main
            print('‚úÖ pyqt_app.main –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
        except ImportError as e:
            print(f'‚ö†Ô∏è  pyqt_app.main —Ç—Ä–µ–±—É–µ—Ç PyQt6: {e}')
        
        try:
            from macos_build import resource_utils
            print('‚úÖ macos_build.resource_utils –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è')
        except ImportError as e:
            print(f'‚ö†Ô∏è  macos_build.resource_utils: {e}')
        "
        
    - name: üìä Generate test report
      run: |
        echo "üìä –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:"
        echo "================================="
        echo "üóÇÔ∏è  –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:"
        find . -type d -name "__pycache__" -prune -o -type d -name "node_modules" -prune -o -type d -name ".git" -prune -o -type d -print | head -20
        echo ""
        echo "üìÑ Python —Ñ–∞–π–ª—ã:"
        find . -name "*.py" -not -path "./__pycache__/*" -not -path "./node_modules/*" | head -10
        echo ""
        echo "üìÑ TypeScript —Ñ–∞–π–ª—ã:"
        find . -name "*.ts" -not -path "./node_modules/*" | head -10
        echo ""
        echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞" 