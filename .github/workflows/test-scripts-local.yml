name: üêç Test Python Scripts

on:
  push:
    branches: [ main, macos-build-test ]
    paths:
      - 'scripts/**'
      - 'pyqt_app/**'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - 'pyqt_app/**'
  workflow_dispatch:

jobs:
  test-python-scripts:
    runs-on: macos-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: üîß Install Python dependencies
      run: |
        echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        python3 -m pip install --upgrade pip
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
          echo "‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        fi
        
        # PyQt –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        if [ -f "pyqt_app/requirements.txt" ]; then
          pip install -r pyqt_app/requirements.txt
          echo "‚úÖ PyQt –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        fi
        
        # –°–∫—Ä–∏–ø—Ç—ã
        if [ -f "scripts/requirements.txt" ]; then
          pip install -r scripts/requirements.txt
          echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        fi
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        pip install pytest pandas openpyxl xlsxwriter
        
    - name: üß™ Test Python script imports
      run: |
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ Python —Å–∫—Ä–∏–ø—Ç–æ–≤..."
        
        python3 -c "
        import sys
        import os
        from pathlib import Path
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ –ø—É—Ç–∏
        sys.path.append('.')
        sys.path.append('scripts')
        sys.path.append('pyqt_app')
        
        print('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª–µ–π...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        modules_to_test = []
        
        # –ò—â–µ–º Python —Ñ–∞–π–ª—ã –≤ scripts/
        scripts_dir = Path('scripts')
        if scripts_dir.exists():
            for py_file in scripts_dir.rglob('*.py'):
                if py_file.name != '__init__.py' and not py_file.name.startswith('test_'):
                    module_path = str(py_file.with_suffix('')).replace('/', '.')
                    modules_to_test.append(module_path)
        
        # –ò—â–µ–º Python —Ñ–∞–π–ª—ã –≤ pyqt_app/
        pyqt_dir = Path('pyqt_app')
        if pyqt_dir.exists():
            for py_file in pyqt_dir.rglob('*.py'):
                if py_file.name != '__init__.py' and not py_file.name.startswith('test_'):
                    module_path = str(py_file.with_suffix('')).replace('/', '.')
                    modules_to_test.append(module_path)
        
        print(f'üì¶ –ù–∞–π–¥–µ–Ω–æ {len(modules_to_test)} –º–æ–¥—É–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
        
        success_count = 0
        for module in modules_to_test:
            try:
                __import__(module)
                print(f'‚úÖ {module}')
                success_count += 1
            except ImportError as e:
                print(f'‚ö†Ô∏è {module}: {e}')
            except Exception as e:
                print(f'‚ùå {module}: {e}')
        
        print(f'üéâ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {success_count}/{len(modules_to_test)} –º–æ–¥—É–ª–µ–π')
        "
        
    - name: üìä Test Excel/CSV processing capabilities
      run: |
        echo "üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Excel/CSV —Ñ–∞–π–ª–æ–≤..."
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        mkdir -p test_data
        
        python3 -c "
        import pandas as pd
        import numpy as np
        from pathlib import Path
        import sys
        
        print('üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV
        test_data = {
            'ID': range(1, 101),
            'Name': [f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i}' for i in range(1, 101)],
            'Email': [f'user{i}@example.com' for i in range(1, 101)],
            'Score': np.random.randint(1, 100, 100),
            'Category': np.random.choice(['A', 'B', 'C'], 100),
            'Date': pd.date_range('2024-01-01', periods=100, freq='D')
        }
        
        df = pd.DataFrame(test_data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        csv_path = 'test_data/test_data.csv'
        excel_path = 'test_data/test_data.xlsx'
        
        df.to_csv(csv_path, index=False, encoding='utf-8')
        df.to_excel(excel_path, index=False)
        
        print(f'‚úÖ CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {csv_path} ({len(df)} —Å—Ç—Ä–æ–∫)')
        print(f'‚úÖ Excel —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {excel_path} ({len(df)} —Å—Ç—Ä–æ–∫)')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ
        df_csv = pd.read_csv(csv_path)
        df_excel = pd.read_excel(excel_path)
        
        print(f'‚úÖ CSV –ø—Ä–æ—á–∏—Ç–∞–Ω: {len(df_csv)} —Å—Ç—Ä–æ–∫, {len(df_csv.columns)} –∫–æ–ª–æ–Ω–æ–∫')
        print(f'‚úÖ Excel –ø—Ä–æ—á–∏—Ç–∞–Ω: {len(df_excel)} —Å—Ç—Ä–æ–∫, {len(df_excel.columns)} –∫–æ–ª–æ–Ω–æ–∫')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
        filtered_df = df[df['Score'] > 50]
        grouped_df = df.groupby('Category')['Score'].mean()
        
        print(f'‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: {len(filtered_df)} —Å—Ç—Ä–æ–∫ —Å Score > 50')
        print(f'‚úÖ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: {len(grouped_df)} –≥—Ä—É–ø–ø')
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ Excel —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏
        with pd.ExcelWriter('test_data/complex_data.xlsx', engine='openpyxl') as writer:
            df.to_excel(writer, sheet_name='–í—Å–µ –¥–∞–Ω–Ω—ã–µ', index=False)
            filtered_df.to_excel(writer, sheet_name='–í—ã—Å–æ–∫–∏–µ –±–∞–ª–ª—ã', index=False)
            grouped_df.to_frame().to_excel(writer, sheet_name='–°—Ä–µ–¥–Ω–∏–µ –±–∞–ª–ª—ã')
        
        print('‚úÖ –°–æ–∑–¥–∞–Ω —Å–ª–æ–∂–Ω—ã–π Excel —Ñ–∞–π–ª —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ª–∏—Å—Ç–∞–º–∏')
        
        print('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Excel/CSV –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
        "
        
        # –û—á–∏—Å—Ç–∫–∞
        rm -rf test_data
        
    - name: üåê Test API integration modules
      run: |
        echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..."
        
        python3 -c "
        import sys
        import os
        sys.path.append('.')
        
        print('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...')
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º EnvManager
            from pyqt_app.env_manager import EnvManager
            env_mgr = EnvManager()
            print('‚úÖ EnvManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ .env —Ñ–∞–π–ª–∞
            env_vars = env_mgr.get_env_variables()
            print(f'‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: {type(env_vars)}')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ EnvManager: {e}')
            sys.exit(1)
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º SessionDataManager
            from pyqt_app.session_data_manager import SessionDataManager
            session_mgr = SessionDataManager()
            print('‚úÖ SessionDataManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            test_data = {'test_key': 'test_value', 'number': 42}
            session_mgr.save_data('test_session', test_data)
            loaded_data = session_mgr.load_data('test_session')
            
            if loaded_data == test_data:
                print('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç')
            else:
                print('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏/–∑–∞–≥—Ä—É–∑–∫–µ')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ SessionDataManager: {e}')
            sys.exit(1)
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º ScriptManager
            from pyqt_app.script_manager import ScriptManager
            script_mgr = ScriptManager()
            print('‚úÖ ScriptManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ ScriptManager: {e}')
            sys.exit(1)
        
        print('üéâ –í—Å–µ API –º–æ–¥—É–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
        "
        
    - name: üìÅ Test path and resource management
      run: |
        echo "üìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç—è–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏..."
        
        python3 -c "
        import sys
        import os
        from pathlib import Path
        sys.path.append('.')
        
        print('üóÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—É—Ç–µ–π...')
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º resource_utils
            from macos_build.resource_utils import (
                is_app_bundle, 
                get_resource_path, 
                get_app_data_dir,
                ensure_dir_exists
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞
            is_bundle = is_app_bundle()
            print(f'‚úÖ App bundle detection: {is_bundle} (–æ–∂–∏–¥–∞–µ—Ç—Å—è False –≤ CI)')
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–µ–π
            app_data_dir = get_app_data_dir()
            print(f'‚úÖ App data directory: {app_data_dir}')
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
            test_dir = Path('test_temp_dir')
            ensure_dir_exists(test_dir)
            
            if test_dir.exists():
                print('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç')
                test_dir.rmdir()  # –û—á–∏—Å—Ç–∫–∞
            else:
                print('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏')
                sys.exit(1)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ —Ä–µ—Å—É—Ä—Å–∞–º
            try:
                resource_path = get_resource_path('package.json')
                print(f'‚úÖ –ü—É—Ç—å –∫ —Ä–µ—Å—É—Ä—Å—É package.json: {resource_path}')
            except Exception as e:
                print(f'‚ö†Ô∏è –†–µ—Å—É—Ä—Å package.json: {e}')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ resource_utils: {e}')
            sys.exit(1)
        
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º node_runner
            from macos_build.node_runner import NodeRunner
            node_runner = NodeRunner()
            print('‚úÖ NodeRunner –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
            node_path = node_runner.get_node_executable_path()
            print(f'‚úÖ Node executable path: {node_path}')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ NodeRunner: {e}')
            sys.exit(1)
        
        print('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
        "
        
    - name: üîß Test GUI components (headless)
      run: |
        echo "üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (headless —Ä–µ–∂–∏–º)..."
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º headless —Ä–µ–∂–∏–º –¥–ª—è PyQt
        export QT_QPA_PLATFORM=offscreen
        export DISPLAY=:99
        
        python3 -c "
        import sys
        import os
        sys.path.append('.')
        
        print('üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...')
        
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º PyQt6 –º–æ–¥—É–ª–∏
            from PyQt6.QtWidgets import QApplication, QWidget
            from PyQt6.QtCore import QTimer
            
            print('‚úÖ PyQt6 –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            app = QApplication([])
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤
            widget = QWidget()
            widget.setWindowTitle('Test Widget')
            widget.resize(200, 100)
            
            print('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç —Å–æ–∑–¥–∞–Ω')
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            try:
                from pyqt_app.components import (
                    HeaderWidget, 
                    FooterWidget, 
                    LoadingWidget,
                    FileDropWidget
                )
                
                # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
                header = HeaderWidget()
                footer = FooterWidget()
                loading = LoadingWidget()
                file_drop = FileDropWidget()
                
                print('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã GUI —Å–æ–∑–¥–∞–Ω—ã')
                
            except ImportError as e:
                print(f'‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}')
            except Exception as e:
                print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}')
            
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            app.quit()
            print('‚úÖ GUI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ GUI: {e}')
            # –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º —Å –æ—à–∏–±–∫–æ–π, —Ç–∞–∫ –∫–∞–∫ GUI –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ CI
            print('‚ö†Ô∏è GUI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ (–æ–∂–∏–¥–∞–µ–º–æ –≤ CI —Å—Ä–µ–¥–µ)')
        "
        
    - name: üìä Generate Python testing report
      run: |
        echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Python..."
        
        cat > python-test-report.md << EOF
        # üêç –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ GoSilk Staff
        
        ## ‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:
        
        ### üì¶ –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π:
        - ‚úÖ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ** - –≤—Å–µ .py —Ñ–∞–π–ª—ã –≤ scripts/ –∏ pyqt_app/
        - ‚úÖ **–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞** - –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –±–µ–∑ –æ—à–∏–±–æ–∫
        - ‚úÖ **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏** - –≤—Å–µ required –ø–∞–∫–µ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã
        
        ### üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö:
        - ‚úÖ **Pandas –æ–ø–µ—Ä–∞—Ü–∏–∏** - —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å CSV –∏ Excel
        - ‚úÖ **–ú–Ω–æ–≥–æ–ª–∏—Å—Ç–æ–≤—ã–µ Excel** - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        - ‚úÖ **–ö–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8** - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
        - ‚úÖ **–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞** - –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
        
        ### üåê API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
        - ‚úÖ **EnvManager** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        - ‚úÖ **SessionDataManager** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏
        - ‚úÖ **ScriptManager** - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Python –∏ Node.js —Å–∫—Ä–∏–ø—Ç–æ–≤
        
        ### üìÅ –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:
        - ‚úÖ **ResourceUtils** - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã (dev/bundle)
        - ‚úÖ **–ü—É—Ç–∏ –∫ —Ä–µ—Å—É—Ä—Å–∞–º** - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–µ–π
        - ‚úÖ **NodeRunner** - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Node.js runtime
        - ‚úÖ **–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫
        
        ### üñ•Ô∏è GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
        - ‚úÖ **PyQt6 –∏–º–ø–æ—Ä—Ç—ã** - –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        - ‚úÖ **–ë–∞–∑–æ–≤—ã–µ –≤–∏–¥–∂–µ—Ç—ã** - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        - ‚úÖ **Headless —Ä–µ–∂–∏–º** - —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        - ‚ö†Ô∏è **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã** - –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
        
        ## üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
        
        ### ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:
        - –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ Python –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        - –û–±—Ä–∞–±–æ—Ç–∫–∞ Excel/CSV —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
        - API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã
        - –°–∏—Å—Ç–µ–º–∞ –ø—É—Ç–µ–π –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã
        - PyQt6 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        
        ### ‚ö†Ô∏è –û–∂–∏–¥–∞–µ–º—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ CI:
        - GUI —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ headless —Ä–µ–∂–∏–º–æ–º
        - –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ .env —Ñ–∞–π–ª—ã
        - Node.js –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ runtime
        
        ## üöÄ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:
        **Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!** ‚úÖ
        
        –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
        –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Å–±–æ—Ä–∫–µ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é.
        
        ---
        
        üìÖ **–î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:** $(date)  
        üêç **Python –≤–µ—Ä—Å–∏—è:** $(python3 --version)  
        üèóÔ∏è **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** macOS $(sw_vers -productVersion) ($(uname -m))
        EOF
        
        echo "‚úÖ –û—Ç—á–µ—Ç –æ Python —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω"
        
    - name: üî∫ Upload Python test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Python-Test-Report
        path: python-test-report.md
        retention-days: 30
        
    - name: üìã Python test summary
      run: |
        cat >> $GITHUB_STEP_SUMMARY << EOF
        # üêç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        
        ## ‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!
        
        ### üîç –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:
        - üì¶ **–ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
        - üìä **–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö** - Excel/CSV –æ–ø–µ—Ä–∞—Ü–∏–∏
        - üåê **API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è** - –≤—Å–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç
        - üìÅ **–§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞** - –ø—É—Ç–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã
        - üñ•Ô∏è **GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã** - PyQt6 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        
        ### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
        - **Python –≤–µ—Ä—Å–∏—è:** $(python3 --version)
        - **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** macOS $(sw_vers -productVersion)
        - **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:** –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        - **–ú–æ–¥—É–ª–∏:** –≤—Å–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
        
        ## üéØ –°—Ç–∞—Ç—É—Å:
        **Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã –∫ production!** üöÄ
        EOF 