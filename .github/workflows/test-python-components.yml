name: 🐍 Test Python Components

on:
  push:
    branches: [ main, macos-build-test ]
    paths:
      - 'scripts/**'
      - 'pyqt_app/**'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-python-components:
    runs-on: macos-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 🔧 Install dependencies
      run: |
        echo "🔧 Установка зависимостей..."
        python3 -m pip install --upgrade pip
        
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        fi
        
        if [ -f "pyqt_app/requirements.txt" ]; then
          pip install -r pyqt_app/requirements.txt
        fi
        
        pip install pytest pandas openpyxl xlsxwriter
        
    - name: 🧪 Test Python imports
      run: |
        echo "🧪 Тестирование Python импортов..."
        
        python3 -c "
        import sys
        sys.path.append('.')
        
        print('📦 Тестирование импортов...')
        
        try:
            import run_app
            print('✅ run_app импортирован')
        except Exception as e:
            print(f'❌ run_app: {e}')
        
        try:
            from pyqt_app import env_manager
            print('✅ env_manager импортирован')
        except Exception as e:
            print(f'❌ env_manager: {e}')
        
        print('🎉 Импорты завершены!')
        "
        
    - name: 📊 Test data processing
      run: |
        echo "📊 Тестирование обработки данных..."
        
        python3 -c "
        import pandas as pd
        import numpy as np
        
        print('📁 Создание тестовых данных...')
        
        data = {
            'ID': range(1, 11),
            'Name': [f'User {i}' for i in range(1, 11)],
            'Score': np.random.randint(1, 100, 10)
        }
        
        df = pd.DataFrame(data)
        
        df.to_csv('test.csv', index=False)
        df.to_excel('test.xlsx', index=False)
        
        print('✅ Файлы созданы и сохранены')
        
        # Чтение
        df_csv = pd.read_csv('test.csv')
        df_excel = pd.read_excel('test.xlsx')
        
        print(f'✅ CSV: {len(df_csv)} строк')
        print(f'✅ Excel: {len(df_excel)} строк')
        
        print('🎉 Обработка данных работает!')
        "
        
        rm -f test.csv test.xlsx
        
    - name: 📋 Summary
      run: |
        cat >> $GITHUB_STEP_SUMMARY << EOF
        # 🐍 Python тестирование завершено ✅
        
        Все компоненты протестированы успешно!
        EOF 